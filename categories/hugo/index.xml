<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on Issif</title>
    <link>https://thomas.labarussias.fr/categories/hugo/</link>
    <description>Recent content in hugo on Issif</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <lastBuildDate>Tue, 20 Aug 2019 16:36:17 +0200</lastBuildDate>
    
        <atom:link href="https://thomas.labarussias.fr/categories/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Utiliser k3d pour avoir un cluster k8s en local</title>
      <link>https://thomas.labarussias.fr/blog/utiliser-k3d/</link>
      <pubDate>Thu, 05 Sep 2019 23:12:52 +0200</pubDate>
      
      <guid>https://thomas.labarussias.fr/blog/utiliser-k3d/</guid>
      <description>

&lt;p&gt;Afin de parfaire mes connaissances sur &lt;a href=&#34;https://kubernetes.io/&#34;&gt;&lt;strong&gt;kubernetes&lt;/strong&gt;&lt;/a&gt;, &lt;em&gt;aka&lt;/em&gt; &lt;strong&gt;k8s&lt;/strong&gt; pour les intimes, j&amp;rsquo;avais envie de monter un &lt;em&gt;cluster&lt;/em&gt; sur mon &lt;em&gt;laptop&lt;/em&gt;, pas juste un noeud tout seul. Jusqu&amp;rsquo;√† pr√©sent je n&amp;rsquo;avais test√© que des solutions pour avoir des &lt;strong&gt;k8s&lt;/strong&gt; mono-noeud, c&amp;rsquo;est sympa, mais trop √©loign√© de la r√©alit√©, surtout si on veut tester des m√©thodes de r√©silience, d&amp;rsquo;&lt;em&gt;auto-scaling&lt;/em&gt; de &lt;em&gt;pods&lt;/em&gt;, de &lt;em&gt;deployments&lt;/em&gt;, de &lt;em&gt;daemonset&lt;/em&gt;, etc.&lt;/p&gt;

&lt;p&gt;Et l√†, la r√©v√©lation ! Je connaissais d√©j√† &lt;a href=&#34;https://github.com/rancher/k3s&#34;&gt;&lt;strong&gt;k3s&lt;/strong&gt;&lt;/a&gt;, le &lt;strong&gt;k8s&lt;/strong&gt; ultra all√©g√© de chez &lt;a href=&#34;https://rancher.com/&#34;&gt;&lt;strong&gt;rancher&lt;/strong&gt;&lt;/a&gt; et il s&amp;rsquo;av√®re qu&amp;rsquo;ils ont d√©velopp√© un petit utilitaire pour monter un &lt;em&gt;cluster&lt;/em&gt; dans des &lt;em&gt;containeurs&lt;/em&gt; &lt;strong&gt;docker&lt;/strong&gt; avec, le bien nomm√© &lt;a href=&#34;https://github.com/rancher/k3d&#34;&gt;&lt;strong&gt;k3d&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Apr√®s plusieurs heures de tests, je suis emball√©, c&amp;rsquo;est ultra rapide, ultra &lt;em&gt;light&lt;/em&gt; et √ßa fonctionne avec tous les outils classiques. Un &lt;strong&gt;ingress controller&lt;/strong&gt; bas√© sur &lt;strong&gt;traefik&lt;/strong&gt; est directement d√©ploy√©, donc on a de base un environnement fonctionnel. Simple. Efficace.&lt;/p&gt;

&lt;h2 id=&#34;installation-de-k3d&#34;&gt;Installation de k3d&lt;/h2&gt;

&lt;p&gt;Rien de compliqu√© pour l&amp;rsquo;installer, plusieurs m√©thodes sont fournies sur le &lt;a href=&#34;https://github.com/rancher/k3d#get&#34;&gt;repo Github officiel&lt;/a&gt;. Comme c&amp;rsquo;est du &lt;strong&gt;go&lt;/strong&gt;, aucune d√©pendance. &lt;em&gt;Easy&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;cr√©er-son-premier-cluster&#34;&gt;Cr√©er son premier cluster&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~ $ k3d create -n mon-cluster-test --publish 80 --publish 8080 --publish 443 -w 2
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;2019/09/05 23:16:34 Created cluster network with ID cae80bddca7cf614494b9d97f7d6edf2b14d45864ef1aa0b1a899a93122ecc1b
2019/09/05 23:16:34 Created docker volume  k3d-mon-cluster-test-images   
2019/09/05 23:16:34 Creating cluster [mon-cluster-test]
2019/09/05 23:16:34 Creating server using docker.io/rancher/k3s:v0.7.0...
2019/09/05 23:16:34 Pulling image docker.io/rancher/k3s:v0.7.0...
2019/09/05 23:16:47 Booting 2 workers for cluster mon-cluster-test
2019/09/05 23:16:48 Created worker with ID b0c019c001376c9aa07f8fb65b52da1b2d52fbe61f25cb24c7198c5b122a2a09
2019/09/05 23:16:49 Created worker with ID a9d959899a2119606248bf8dd5d681f05efb7232d19c5f8206ffb5025f10885b
2019/09/05 23:16:49 SUCCESS: created cluster [mon-cluster-test]    
2019/09/05 23:16:49 You can now use the cluster with:

export KUBECONFIG=&amp;quot;$(k3d get-kubeconfig --name=&#39;mon-cluster-test&#39;)&amp;quot;
kubectl cluster-info
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sur ma machine, l&amp;rsquo;ex√©cution a pris environ 20s, en sachant que 95% du temps est li√© la r√©cup√©ration de l&amp;rsquo;image &lt;strong&gt;k3s&lt;/strong&gt;. Impressionnant.&lt;/p&gt;

&lt;p&gt;Une petite explication des arguments :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; : le nom de notre cluster &lt;strong&gt;k8s&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--publish 80 --publish 8080 --publish 443&lt;/code&gt; : les ports qu&amp;rsquo;on va exposer, comme c&amp;rsquo;est fait avec la commande &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#expose-incoming-ports&#34;&gt;&lt;em&gt;docker run&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w 2&lt;/code&gt; : le nombre de &lt;em&gt;workers&lt;/em&gt; qu&amp;rsquo;on veut&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On peut lister nos &lt;em&gt;clusters&lt;/em&gt; :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~ $ k3d ls
+------------------+------------------------------+---------+---------+
|       NAME       |            IMAGE             | STATUS  | WORKERS |
+------------------+------------------------------+---------+---------+
| mon-cluster-test | docker.io/rancher/k3s:v0.7.0 | running |   2/2   |
+------------------+------------------------------+---------+---------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;L&amp;rsquo;image est effectivement de taille r√©duite (&lt;em&gt;proportionnellement aux autres solutions&lt;/em&gt;) :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REPOSITORY    TAG     IMAGE ID      CREATED       SIZE 
rancher/k3s   v0.7.0  f1ec9d3fbf66  6 weeks ago   119MB
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;se-connecter-au-cluster&#34;&gt;Se connecter au cluster&lt;/h2&gt;

&lt;p&gt;Comme pr√©cis√© dans les logs de cr√©ation, on peut r√©cup√©rer le &lt;em&gt;kubeconfig&lt;/em&gt; associ√© pour utiliser les outils classiques (&lt;a href=&#34;https://github.com/kubernetes/kubernetes/tree/master/pkg/kubectl&#34;&gt;&lt;strong&gt;kubectl&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/derailed/k9s&#34;&gt;&lt;strong&gt;k9s&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/helm/helm&#34;&gt;&lt;strong&gt;helm&lt;/strong&gt;&lt;/a&gt;, etc) :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~ $ export KUBECONFIG=&amp;quot;$(k3d get-kubeconfig --name=&#39;mon-cluster-test&#39;)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;~ $ kubectl get nodes
NAME                            STATUS   ROLES    AGE   VERSION
k3d-mon-cluster-test-server     Ready    master   2m    v1.14.4-k3s.1
k3d-mon-cluster-test-worker-0   Ready    worker   2m    v1.14.4-k3s.1
k3d-mon-cluster-test-worker-1   Ready    worker   2m    v1.14.4-k3s.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Enjoy&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Falcosidekick fait d√©sormais partie de l&#39;organisation Falcosecurity</title>
      <link>https://thomas.labarussias.fr/blog/falcosidekick-migre-vers-falcosecurity/</link>
      <pubDate>Wed, 28 Aug 2019 11:12:35 +0200</pubDate>
      
      <guid>https://thomas.labarussias.fr/blog/falcosidekick-migre-vers-falcosecurity/</guid>
      <description>&lt;p&gt;Les mainteneurs de &lt;strong&gt;falco&lt;/strong&gt;  m&amp;rsquo;ont propos√© de migrer &lt;strong&gt;falcosidekick&lt;/strong&gt; au sein de l&amp;rsquo;organisation officielle &lt;strong&gt;falcosecurity&lt;/strong&gt;. Il devient donc un projet officiel üéâüòç.&lt;/p&gt;

&lt;p&gt;Le repo &lt;a href=&#34;https://github.com/falcosecurity/falcosidekick&#34;&gt;Github&lt;/a&gt; et l&amp;rsquo;image sur le &lt;a href=&#34;https://hub.docker.com/r/falcosecurity/falcosidekick/&#34;&gt;DockerHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Au passage, j&amp;rsquo;ai sortie la &lt;a href=&#34;https://github.com/Issif/falcosidekick/releases/tag/2.7.1&#34;&gt;&lt;strong&gt;2.7.1&lt;/strong&gt;&lt;/a&gt; qui met √† jour la version de Go utilis√©e (1.12).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Enjoy&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Falcosidekick 2.7.0</title>
      <link>https://thomas.labarussias.fr/blog/falcosidekick-v-2-7-0/</link>
      <pubDate>Tue, 27 Aug 2019 17:15:10 +0200</pubDate>
      
      <guid>https://thomas.labarussias.fr/blog/falcosidekick-v-2-7-0/</guid>
      <description>&lt;p&gt;Nouvelle release, la &lt;a href=&#34;https://github.com/Issif/falcosidekick/releases/tag/2.7.0&#34;&gt;&lt;strong&gt;2.7.0&lt;/strong&gt;&lt;/a&gt;, de mon proxy pour &lt;a href=&#34;https://falco.org/&#34;&gt;&lt;strong&gt;falco&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La grosse feature √©tant l&amp;rsquo;ajout de &lt;a href=&#34;https://grafana.com/oss/loki&#34;&gt;&lt;strong&gt;Loki&lt;/strong&gt;&lt;/a&gt; comme sortie :&lt;/p&gt;




  
    
    
    
    
  
  
  
  
  
  
  
  
  &lt;div class=&#34;fancybox&#34;&gt;
    &lt;a data-fancybox=&#34;Screenshot&#34; href=&#34;https://raw.githubusercontent.com/falcosecurity/falcosidekick/master/imgs//loki.png&#34; data-caption=&#34;Loki Grafana&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/falcosecurity/falcosidekick/master/imgs//loki.png&#34;&gt;&lt;/a&gt;
    &lt;div class=&#34;caption&#34;&gt;Loki Grafana&lt;/div&gt;
  &lt;/div&gt;



&lt;p&gt;Le repo &lt;a href=&#34;https://github.com/falcosecurity/falcosidekick&#34;&gt;Github&lt;/a&gt; et l&amp;rsquo;image sur le &lt;a href=&#34;https://hub.docker.com/r/falcosecurity/falcosidekick/&#34;&gt;DockerHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Enjoy&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proxifier Traefik par Traefik</title>
      <link>https://thomas.labarussias.fr/blog/traefik-proxyfier-dashboard/</link>
      <pubDate>Mon, 26 Aug 2019 14:28:24 +0200</pubDate>
      
      <guid>https://thomas.labarussias.fr/blog/traefik-proxyfier-dashboard/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://traefik.io/&#34;&gt;&lt;strong&gt;Traefik&lt;/strong&gt;&lt;/a&gt; poss√®de une &lt;em&gt;UI&lt;/em&gt; basique qui est par d√©faut expos√©e sur un port diff√©rent. Il est possible de faire en sorte que &lt;strong&gt;Traefik&lt;/strong&gt; serve lui m√™me de proxy, cela permet :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ne plus avoir √† utiliser un port diff√©rent pour acc√©der l&amp;rsquo;&lt;em&gt;UI&lt;/em&gt;, mais un domaine classique (&amp;rdquo;&lt;em&gt;traefik.mondomaine.net&lt;/em&gt;&amp;rdquo; par ex.)&lt;/li&gt;
&lt;li&gt;forcer l&amp;rsquo;acc√®s en http&lt;strong&gt;s&lt;/strong&gt; avec en prime un certificat &lt;a href=&#34;https://letsencrypt.org/fr/&#34;&gt;&lt;em&gt;Let&amp;rsquo;s Encrypt&lt;/em&gt;&lt;/a&gt; automatique et gratuit&lt;/li&gt;
&lt;li&gt;permettre de rajouter une authentification, par d√©faut, l&amp;rsquo;&lt;em&gt;UI&lt;/em&gt; est ouverte √† tout une fois activ√©e&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dans mon cas, je fais tourner &lt;strong&gt;Traefik&lt;/strong&gt; dans un container, mais √ßa marchera pareil si vous le fa√Ætes tourner directement sur l&amp;rsquo;&lt;em&gt;host&lt;/em&gt;, prenez juste soin de filtrer le port de l&amp;rsquo;&lt;em&gt;UI&lt;/em&gt; (&lt;em&gt;8080&lt;/em&gt; par d√©faut) pour qu&amp;rsquo;il n&amp;rsquo;accepte que les connexions de la boucle local (&lt;em&gt;127.0.0.1&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Voil√† ce qu&amp;rsquo;il faut avoir √† minima dans sa configuration &lt;em&gt;config.toml&lt;/em&gt; :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;################################################################
# Configuration globale
################################################################

defaultEntryPoints = [&amp;quot;http&amp;quot;, &amp;quot;https&amp;quot;]

[entryPoints]
  [entryPoints.http]
  address = &amp;quot;:80&amp;quot;               # traefik ecoute sur le port 80
    [entryPoints.http.redirect]
      entryPoint = &amp;quot;https&amp;quot;      # redirection http &amp;gt; https
  [entryPoints.https]
  address = &amp;quot;:443&amp;quot;              # traefik ecoute sur le port 443
  [entryPoints.https.tls]
    minVersion = &amp;quot;VersionTLS12&amp;quot; # version minimum de TLS acceptee
  [entryPoints.ui]
  address=&amp;quot;127.0.0.1:8080&amp;quot;      # on ecoute uniquement sur la boucle locale pour ce port
    [entryPoints.ui.auth]
      [entryPoints.ui.auth.basic]
        users = [&amp;quot;XXXX:YYYY&amp;quot;]   # les identifiants au format htpasswd

################################################################
# Configuration pour let&#39;s encrypt
################################################################

[acme]
email = &amp;quot;xxx@yyy.zzz&amp;quot;           # votre mail pour lets encrypt
storage = &amp;quot;/certs/acme.json&amp;quot;
entryPoint = &amp;quot;https&amp;quot;
onDemand = true                 # demande automatique de certificat
acmeLogging = true
  [acme.httpChallenge]
  entryPoint = &amp;quot;http&amp;quot;

################################################################
# Configuration de l&#39;API de Traefik
################################################################

[api]
entryPoint = &amp;quot;ui&amp;quot;               # l API ecoutera sur cet entrypoint
dashboard = true
  [api.statistics]
  recentErrors = 50

################################################################
# Configuration pour l&#39;UI de Traefik
################################################################

[file]

[frontends]
  [frontends.ui]
  backend = &amp;quot;ui&amp;quot;
  passHostHeader = true
    [frontends.ui.routes.default]
    rule = &amp;quot;Host:ui.mondomaine.net&amp;quot; # votre domaine a configurer

[backends]
  [backends.ui]
    [backends.ui.servers.default]
      url = &amp;quot;http://127.0.0.1:8080&amp;quot;   # le backend a utiliser qui s avere etre l entrypoint de l API
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Enjoy&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Falcosidekick 2.6.0</title>
      <link>https://thomas.labarussias.fr/blog/falcosidekick-v-2-6-0/</link>
      <pubDate>Mon, 26 Aug 2019 13:18:10 +0200</pubDate>
      
      <guid>https://thomas.labarussias.fr/blog/falcosidekick-v-2-6-0/</guid>
      <description>&lt;p&gt;Nouvelle release, la &lt;a href=&#34;https://github.com/Issif/falcosidekick/releases/tag/2.6.0&#34;&gt;&lt;strong&gt;2.6.0&lt;/strong&gt;&lt;/a&gt;, de mon proxy pour &lt;a href=&#34;https://falco.org/&#34;&gt;&lt;strong&gt;falco&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La grosse feature √©tant l&amp;rsquo;ajout du &lt;strong&gt;SMTP&lt;/strong&gt; (envoi d&amp;rsquo;email) comme sortie :&lt;/p&gt;




  
    
    
    
    
  
  
  
  
  
  
  
  
  &lt;div class=&#34;fancybox&#34;&gt;
    &lt;a data-fancybox=&#34;Screenshot&#34; href=&#34;https://raw.githubusercontent.com/falcosecurity/falcosidekick/master/imgs//smtp_html.png&#34; data-caption=&#34;SMTP html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/falcosecurity/falcosidekick/master/imgs//smtp_html.png&#34;&gt;&lt;/a&gt;
    &lt;div class=&#34;caption&#34;&gt;SMTP html&lt;/div&gt;
  &lt;/div&gt;



&lt;p&gt;Afin de respecter les standards, la version &lt;em&gt;html&lt;/em&gt; contient √©galement la version &lt;em&gt;plaintext&lt;/em&gt;. Il est aussi possible d&amp;rsquo;envoyer uniquement la version &lt;em&gt;plaintext&lt;/em&gt;, utile pour certains syst√®mes de &lt;em&gt;ticketing&lt;/em&gt; qui utilisent l&amp;rsquo;email pour la cr√©ation.&lt;/p&gt;

&lt;p&gt;Le repo &lt;a href=&#34;https://github.com/falcosecurity/falcosidekick&#34;&gt;Github&lt;/a&gt; et l&amp;rsquo;image sur le &lt;a href=&#34;https://hub.docker.com/r/falcosecurity/falcosidekick/&#34;&gt;DockerHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Enjoy&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Conversion de Types en Go</title>
      <link>https://thomas.labarussias.fr/blog/golang-conversion-types/</link>
      <pubDate>Wed, 21 Aug 2019 17:59:22 +0200</pubDate>
      
      <guid>https://thomas.labarussias.fr/blog/golang-conversion-types/</guid>
      <description>

&lt;hr /&gt;

&lt;h1 id=&#34;int64-string&#34;&gt;int64 ü†Æ string&lt;/h1&gt;

&lt;h2 id=&#34;formatint-https-golang-org-pkg-strconv-formatint&#34;&gt;&lt;a href=&#34;https://golang.org/pkg/strconv/#FormatInt&#34;&gt;FormatInt&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;strconv.FormatInt(i int64, base int)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;itoa-https-golang-org-pkg-strconv-itoa&#34;&gt;&lt;a href=&#34;https://golang.org/pkg/strconv/#Itoa&#34;&gt;Itoa&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;strconv.Itoa(i int)
// Itoa is equivalent to FormatInt(int64(i), 10). 
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;string-int64&#34;&gt;string ü†Æ int64&lt;/h1&gt;

&lt;h2 id=&#34;parseint-https-golang-org-pkg-strconv-parseint&#34;&gt;&lt;a href=&#34;https://golang.org/pkg/strconv/#ParseInt&#34;&gt;ParseInt&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;strconv.ParseInt(s string, base int, bitSize int)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;atoi-https-golang-org-pkg-strconv-atoi&#34;&gt;&lt;a href=&#34;https://golang.org/pkg/strconv/#Atoi&#34;&gt;Atoi&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;strconv.Atoi(s string)
// Atoi is equivalent to ParseInt(s, 10, 0), converted to type int. 
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;string-time&#34;&gt;string ü†Æ Time&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Pour le &lt;a href=&#34;https://godoc.org/time#pkg-constants&#34;&gt;layout&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Pour la &lt;a href=&#34;https://godoc.org/time#LoadLocation&#34;&gt;location&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;parse-https-godoc-org-time-parse&#34;&gt;&lt;a href=&#34;https://godoc.org/time#Parse&#34;&gt;Parse&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;time.Parse(layout, value string)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parseinlocation-https-godoc-org-time-parseinlocation&#34;&gt;&lt;a href=&#34;https://godoc.org/time#ParseInLocation&#34;&gt;ParseInLocation&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;time.ParseInLocation(layout, value string, loc *Location)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;time-string&#34;&gt;Time ü†Æ string&lt;/h1&gt;

&lt;p&gt;Pour le &lt;a href=&#34;https://godoc.org/time#pkg-constants&#34;&gt;layout&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;time-format-https-godoc-org-time-time-format&#34;&gt;&lt;a href=&#34;https://godoc.org/time#Time.Format&#34;&gt;Time.Format&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;var t time.Time
t.Format(layout string)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Chart XKCD</title>
      <link>https://thomas.labarussias.fr/blog/chart-xkcd/</link>
      <pubDate>Tue, 20 Aug 2019 16:36:17 +0200</pubDate>
      
      <guid>https://thomas.labarussias.fr/blog/chart-xkcd/</guid>
      <description>

&lt;p&gt;Je suis tomb√© &lt;a href=&#34;https://github.com/timqian/chart.xkcd&#34;&gt;chart.xkcd&lt;/a&gt; parmi les flux RSS que je suis. J&amp;rsquo;ai trouv√© l&amp;rsquo;id√©e amusante et le rendu agr√©able, j&amp;rsquo;en ai donc fait un micro &lt;em&gt;shortcode&lt;/em&gt; pour &lt;strong&gt;Hugo&lt;/strong&gt; :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div&amp;gt;
&amp;lt;svg class=&#39;{{ .Get &amp;quot;name&amp;quot; }}&#39;&amp;gt;&amp;lt;/svg&amp;gt;
&amp;lt;script src=&amp;quot;https://cdn.jsdelivr.net/npm/chart.xkcd@1/dist/chart.xkcd.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
  const svg{{ .Get &amp;quot;name&amp;quot; | safeJS }} = document.querySelector(&#39;.{{ .Get &amp;quot;name&amp;quot; }}&#39;);
  new chartXkcd.{{ .Get &amp;quot;type&amp;quot; | safeJS }}(svg{{ .Get &amp;quot;name&amp;quot; | safeJS }}, {
    {{ .Inner | safeJS }}
  });
&amp;lt;/script&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A caler dans &lt;code&gt;layout/shortcodes/chart-xkcd.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Trois types de diagrammes sont dispos pour le moment : &lt;a href=&#34;#line&#34;&gt;&lt;strong&gt;Line&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#pie&#34;&gt;&lt;strong&gt;Pie&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#bar&#34;&gt;&lt;strong&gt;Bar&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;#xy&#34;&gt;&lt;strong&gt;XY&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Les options de chaque diagramme sont trouvables dans la &lt;a href=&#34;https://timqian.com/chart.xkcd/&#34;&gt;doc&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;exemples&#34;&gt;Exemples&lt;/h2&gt;

&lt;h3 id=&#34;line&#34;&gt;Line&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{{% chart-xkcd name=&amp;quot;line&amp;quot; type=&amp;quot;Line&amp;quot; %}}
    title: &#39;A vs B&#39;,
    xLabel: &#39;Abscisse&#39;,
    yLabel: &#39;Ordonnee&#39;,
    data: {
      labels:[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;,&#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;10&#39;],
      datasets: [{
        label: &#39;A&#39;,
        data: [30, 2500, 200, 300, 250 ,800, 1500, 2900, 5000, 800],
      }, {
        label: &#39;B&#39;,
        data: [0, 1, 30, 70, 80, 100, 50, 80, 40, 150],
      }]
    },
    options: { // optional
      yTickCount: 10,
    }
{{% /chart-xkcd %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;svg class=&#39;line&#39;&gt;&lt;/svg&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/chart.xkcd@1/dist/chart.xkcd.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
  const svgline = document.querySelector(&#39;.line&#39;);
  new chartXkcd.Line(svgline, {
    
    title: &#39;A vs B&#39;,
    xLabel: &#39;Abscisse&#39;,
    yLabel: &#39;Ordonnee&#39;,
    data: {
      labels:[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;,&#39;7&#39;, &#39;8&#39;, &#39;9&#39;, &#39;10&#39;],
      datasets: [{
        label: &#39;A&#39;,
        data: [30, 2500, 200, 300, 250 ,800, 1500, 2900, 5000, 800],
      }, {
        label: &#39;B&#39;,
        data: [0, 145, 300, 770, 80, 45, 50, 1080, 40, 150],
      }]
    },
    options: {
      yTickCount: 10,
    }

  });
&lt;/script&gt;
&lt;/div&gt;

&lt;h3 id=&#34;pie&#34;&gt;Pie&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{{% chart-xkcd name=&amp;quot;pie&amp;quot; type=&amp;quot;Pie&amp;quot; %}}
    title: &#39;A B C D E&#39;,
    data: {
      labels:[ &#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;],
      datasets: [{
        data: [200, 122, 60, 130, 44,],
      }]
    },
    options: {
      innerRadius: 0.5, // mettre √† 0 pour obtenir un diagramme camembert (pie chart)
      legendPosition: chartXkcd.config.positionType.upRight,
    }
{{% /chart-xkcd %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;svg class=&#39;pie&#39;&gt;&lt;/svg&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/chart.xkcd@1/dist/chart.xkcd.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
  const svgpie = document.querySelector(&#39;.pie&#39;);
  new chartXkcd.Pie(svgpie, {
    
    title: &#39;A B C D E&#39;,
    data: {
      labels:[ &#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;],
      datasets: [{
        data: [200, 122, 60, 130, 44,],
      }]
    },
    options: {
      innerRadius: 0.5,
      legendPosition: chartXkcd.config.positionType.upRight,
    }

  });
&lt;/script&gt;
&lt;/div&gt;

&lt;h3 id=&#34;bar&#34;&gt;Bar&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{{% chart-xkcd name=&amp;quot;bar&amp;quot; type=&amp;quot;Bar&amp;quot; %}}
    title: &amp;quot;A B C D&amp;quot;,
    data: {
      labels:[&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;],
      datasets: [{
        data: [20, 33, 5, 12],
      }]
    },
    options: { // optional
      yTickCount: 8,
    }
{{% /chart-xkcd %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;svg class=&#39;bar&#39;&gt;&lt;/svg&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/chart.xkcd@1/dist/chart.xkcd.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
  const svgbar = document.querySelector(&#39;.bar&#39;);
  new chartXkcd.Bar(svgbar, {
    
    title: &#34;A B C D&#34;,
    data: {
      labels:[&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;],
      datasets: [{
        data: [20, 33, 5, 12],
      }]
    },
    options: { // optional
      yTickCount: 8,
    }

  });
&lt;/script&gt;
&lt;/div&gt;

&lt;h3 id=&#34;xy&#34;&gt;XY&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{{% chart-xkcd name=&amp;quot;xy&amp;quot; type=&amp;quot;XY&amp;quot; %}}
    title: &#39;A vs B&#39;,
    xLabel: &#39;Abscisse&#39;,
    yLabel: &#39;Ordonnee&#39;,
    data: {
      datasets: [{
        label: &#39;A&#39;,
        data: [{ x: 1, y: 30 }, { x: 3, y: 8 }, { x: 5, y: 45 }, { x: 7, y: 22 }, { x: 9, y: -4 }],
      }, {
        label: &#39;B&#39;,
        data: [{ x: -2, y: 12 }, { x: 4, y: -20 }, { x: 6, y: 53 }, { x: 8, y: 12 }, { x: 10, y: 20 }],
      }],
    },
    options: {
      xTickCount: 10,
      yTickCount: 10,
      showLine: false,
      dotSize: 1,
    }
{{% /chart-xkcd %}}
&lt;/code&gt;&lt;/pre&gt;

&lt;div&gt;
&lt;svg class=&#39;xy1&#39;&gt;&lt;/svg&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/chart.xkcd@1/dist/chart.xkcd.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
  const svgxy1 = document.querySelector(&#39;.xy1&#39;);
  new chartXkcd.XY(svgxy1, {
    
    title: &#39;A vs B&#39;,
    xLabel: &#39;Abscisse&#39;,
    yLabel: &#39;Ordonnee&#39;,
    data: {
      datasets: [{
        label: &#39;A&#39;,
        data: [{ x: 1, y: 30 }, { x: 3, y: 8 }, { x: 5, y: 45 }, { x: 7, y: 22 }, { x: 9, y: -4 }],
      }, {
        label: &#39;B&#39;,
        data: [{ x: -2, y: 12 }, { x: 4, y: -20 }, { x: 6, y: 53 }, { x: 8, y: 12 }, { x: 10, y: 20 }],
      }],
    },
    options: {
      xTickCount: 10,
      yTickCount: 10,
      showLine: false,
      dotSize: 1,
    }

  });
&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Avec &lt;code&gt;options: {showLine: true}&lt;/code&gt; :&lt;/p&gt;

&lt;div&gt;
&lt;svg class=&#39;xy2&#39;&gt;&lt;/svg&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/chart.xkcd@1/dist/chart.xkcd.min.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
  const svgxy2 = document.querySelector(&#39;.xy2&#39;);
  new chartXkcd.XY(svgxy2, {
    
    title: &#39;A vs B&#39;,
    xLabel: &#39;Abscisse&#39;,
    yLabel: &#39;Ordonnee&#39;,
    data: {
      datasets: [{
        label: &#39;A&#39;,
        data: [{ x: 1, y: 30 }, { x: 3, y: 8 }, { x: 5, y: 45 }, { x: 7, y: 22 }, { x: 9, y: -4 }],
      }, {
        label: &#39;B&#39;,
        data: [{ x: -2, y: 12 }, { x: 4, y: -20 }, { x: 6, y: 53 }, { x: 8, y: 12 }, { x: 10, y: 20 }],
      }],
    },
    options: {
      xTickCount: 10,
      yTickCount: 10,
      showLine: true,
      dotSize: 1,
    }

  });
&lt;/script&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>D√©coder du base64 en Go</title>
      <link>https://thomas.labarussias.fr/blog/decoder-du-base64-en-go/</link>
      <pubDate>Mon, 19 Aug 2019 21:18:47 +0200</pubDate>
      
      <guid>https://thomas.labarussias.fr/blog/decoder-du-base64-en-go/</guid>
      <description>&lt;p&gt;Je tentais de d√©coder la partie &lt;em&gt;payload&lt;/em&gt; d&amp;rsquo;un token &lt;em&gt;JWT&lt;/em&gt; (&lt;a href=&#34;https://scotch.io/tutorials/the-anatomy-of-a-json-web-token&#34;&gt;https://scotch.io/tutorials/the-anatomy-of-a-json-web-token&lt;/a&gt;) quand j&amp;rsquo;ai eu l&amp;rsquo;erreur suivante :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;panic: illegal base64 data at input byte 349
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ma fa√ßon de faire √©tait pourtant classique et a toujours fonctionn√© auparavant :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;base64.StdEncoding.DecodeString(s)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Et le d√©codage du &lt;em&gt;string&lt;/em&gt; via un autre outil ne posait pas de souci. üòß&lt;/p&gt;

&lt;p&gt;La solution se trouvait une fois de plus dans la documentation de &lt;strong&gt;Go&lt;/strong&gt; : &lt;a href=&#34;https://golang.org/pkg/encoding/base64/#pkg-variables&#34;&gt;https://golang.org/pkg/encoding/base64/#pkg-variables&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Il existe plusieurs fonctions de d√©codage qui prennent ou non en compte les caract√®res de &lt;em&gt;padding&lt;/em&gt;, en changeant pour :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;base64.RawStdEncoding.DecodeString(s)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mon &lt;em&gt;payload&lt;/em&gt; √©tait d√©cod√©.&lt;/p&gt;

&lt;p&gt;üëç&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>